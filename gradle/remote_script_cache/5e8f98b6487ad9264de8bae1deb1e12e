// Load mod related properties
ext.modName = getRequiredString('mod_name')
ext.modAuthor = getRequiredString('mod_author')
ext.modId = getRequiredString('mod_id')
ext.modCredits = getOptionalString('mod_credits')
ext.modDescription = getOptionalString('mod_description')
ext.modChangelog = getOptionalString('mod_changelog')
ext.modHomepage = getOptionalString('mod_homepage')
ext.modSource = getOptionalString('mod_source')
ext.modIssues = getOptionalString('mod_issues')
//ext.modLicense = getDefaultProperty('mod_license', 'All Rights Reserved')

// Load Minecraft specific properties
ext.mcVersion = getRequiredString('minecraft_version')

def String getString(name, defaultValue, warn = false) {

    return getProperty(name, defaultValue, warn).toString()
}

def getProperty(name, defaultValue, warn = false) {

    // Ensure it's a string, to handle Gradle Strings.
    name = name.toString();
    
    if (project.hasProperty(name)) {
    
        return project.findProperty(name)
    }
    
    if (warn) {
    
        project.logger.warn("Property ${name} was not found. Defaulting to ${defaultValue}.")
    }
    
    return defaultValue
}

def getOptionalString(name) {

    return getString(name, '')
}

def getRequiredString(name) {

    return getRequiredProperty(name).toString()
}

def getRequiredProperty(name) {

    if (project.hasProperty(name)) {
    
        return project.findProperty(name)
    }
    
    project.logger.error("The ${name} property is required!")
    throw new RuntimeException("The ${name} property is required!")
}

def getExecOutput(commands) {

    def out = new ByteArrayOutputStream()
        
    exec {
        commandLine commands
        standardOutput out
    }
        
    return out.toString().trim();
}

ext {

    getDefaultString = this.&getString
    getDefaultProperty = this.&getProperty
    getRequiredString = this.&getRequiredString
    getRequiredProperty = this.&getRequiredProperty
    getExecOutput = this.&getExecOutput
    getOptionalString = this.&getOptionalString
}