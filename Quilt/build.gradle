plugins {
	id 'maven-publish'
	id 'org.quiltmc.loom' version "0.12.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

archivesBaseName = "${mod_file_name}-fabric-${minecraft_version}"

repositories {

}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "org.quiltmc:quilt-loader:${quilt_loader_version}"
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilt_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")

    implementation group: 'com.electronwill.night-config', name: 'core', version: '3.6.5'
    implementation group: 'com.electronwill.night-config', name: 'toml', version: '3.6.5'

    include group: 'com.electronwill.night-config', name: 'core', version: '3.6.5'
    include group: 'com.electronwill.night-config', name: 'toml', version: '3.6.5'
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    exclude "fabric.mod.json"

    filesMatching("quilt.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

curseforge{
    apiKey = project.findProperty('curse_auth')
    project{
        id = project.findProperty('curse_project')
        releaseType = project.findProperty('curse_release_type_fabric')
        changelogType = 'markdown'
        if(new File("../", "Changelog.md").exists())
            changelog = new File("../", "Changelog.md").text
        addGameVersion project.minecraft_version
        addGameVersion 'Fabric'

        mainArtifact(remapJar) {
            displayName = "$project.ext.mod_name - Fabric - $project.ext.minecraft_version - v$project.version"
        }

        afterEvaluate{
            uploadTask.dependsOn(remapJar)
        }
        options{
            forgeGradleIntegration = false;
        }
    }
}
