plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.+"
}

archivesBaseName = "${mod_file_name}-fabric-${minecraft_version}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    //modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")

    implementation group: 'com.electronwill.night-config', name: 'core', version: '3.6.5'
    implementation group: 'com.electronwill.night-config', name: 'toml', version: '3.6.5'

    include group: 'com.electronwill.night-config', name: 'core', version: '3.6.5'
    include group: 'com.electronwill.night-config', name: 'toml', version: '3.6.5'
}

loom {
    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

minecraft{
    refmapName = "${mod_id}.refmap.json";
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

curseforge{
    apiKey = project.findProperty('curse_auth')
    project{
        id = project.findProperty('curse_project')
        releaseType = project.findProperty('curse_release_type_fabric')
        changelogType = 'markdown'
        if(new File("../", "Changelog.md").exists())
            changelog = new File("../", "Changelog.md").text
        addGameVersion project.minecraft_version
        addGameVersion 'Fabric'

        mainArtifact(remapJar) {
            displayName = "$project.ext.mod_name - Fabric - $project.ext.minecraft_version - v$project.version"
        }

        afterEvaluate{
            uploadTask.dependsOn(remapJar)
        }
        options{
            forgeGradleIntegration = false;
        }
    }
}

modrinth {
    token = project.findProperty('modrinth_auth')
    projectId = "NRLPy2mk"
    versionType = "release" // This is the default -- can also be `beta` or `alpha`
    versionName = "$project.ext.mod_name - v${version}"
    version = "${version}_fabric"
    uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["1.18", "1.18.1", "1.18.2"] // Must be an array, even with only one version
    loaders = ["forge"]
}